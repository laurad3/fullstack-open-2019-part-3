{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","handleDelete","id","Persons","personsToShow","search","persons","filter","toLowerCase","includes","map","key","PersonForm","onSubmit","handleSubmit","value","newName","onChange","handleName","newNumber","handleNumber","type","Filter","handleSearch","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","notificationStyle","backgroundColor","success","color","fontSize","padding","textAlign","style","message","App","useState","setPersons","setNewName","setNewNumber","setSearch","setNotification","updatePersonNumber","find","changedPerson","personsService","returnedPerson","clearNotification","catch","error","setTimeout","addNewPerson","newPerson","concat","useEffect","console","log","className","event","target","preventDefault","userExists","window","confirm","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4334b66.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = props => {\n    return (\n        <p>{props.person.name} {props.person.number}<button onClick={() => props.handleDelete(props.person.id)}>delete</button></p>\n    );  \n};\n\nconst Persons = props => {\n    const personsToShow = (props.search === '') ? props.persons : props.persons.filter(person => person.name.toLowerCase().includes(props.search.toLowerCase()));\n\n    const rows = () => personsToShow.map(person => <Person key={person.name} person={person} handleDelete={props.handleDelete} />);\n\n    return (\n        <div>\n            {rows()}\n        </div>\n    );\n};\n\nexport default Persons;","import React from 'react';\n\nconst PersonForm = props => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>name: <input value={props.newName} onChange={props.handleName} /></div>\n            <div>number: <input value={props.newNumber} onChange={props.handleNumber} /></div>\n            <div><button type=\"submit\">add</button></div>\n        </form>\n    );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Filter = (props) => {\n    return (\n        <div>\n            <p>filter show with <input value={props.search} onChange={props.handleSearch} /></p>\n        </div>\n    );  \n};\n\nexport default Filter;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then(response => response.data);\n};\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then(response => response.data);\n};\n\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\treturn request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };","import React from 'react';\n\nconst Notification = ({ notification }) => {\n    if (notification) {\n    \tconst notificationStyle = {\n\t\t\tbackgroundColor: notification.success ? '#baffc2' : '#ffd6e5',\n\t\t\tcolor: '#000000',\n\t\t\tfontSize: 16,\n\t\t\tpadding: '.5em 1em',\n\t\t\ttextAlign: 'center'\n\t\t};\n\t\n        return(\n            <div style={notificationStyle}>{notification.message}</div>\n        );   \n    }\n\n\treturn null;\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport personsService from './services/persons';\nimport Notification from './components/Notification';\nimport './index.css';\n\nconst App = props => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [search, setSearch] = useState('');\n    const [notification, setNotification] = useState(null);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const userExists = persons.find(person => person.name === newName);\n        \n        if (userExists) {\n            if (window.confirm(`${userExists.name} is already added to phonebook, replace the old number with a new one?`)) {\n                updatePersonNumber(userExists.id, newNumber);\n            }\n        } else {\n            const newPerson = {\n                name: newName,\n                number: newNumber,\n                id: (persons.length + 1)\n            };\n\n            addNewPerson(newPerson);\n        }\n\n        setNewName('');\n        setNewNumber('');\n    };\n\n    const updatePersonNumber = (id, number) => {\n        const person = persons.find(person => person.id === id);\n        const changedPerson = { ...person, number: number }\n\n        personsService\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson));\n            setNotification({\n                message: `Updated ${returnedPerson.name}`,\n                success: true\n            });\n\n            clearNotification();\n        })\n        .catch(error => {\n            setNotification({\n                message: `Information of ${changedPerson.name} has already been removed from the server`, \n                success: false\n            });\n\n            clearNotification();\n        });\n    };\n\n    const clearNotification = () => {\n        setTimeout(() => {\n            setNotification(null);\n        }, 2000);\n    };\n\n    const addNewPerson = newPerson => {\n        personsService\n        .create(newPerson)\n        .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson));\n            setNotification({\n                message: `Added ${returnedPerson.name}`, \n                success: true\n            });\n\n            clearNotification();\n        })\n        .catch(error => {\n            setNotification({\n                message: `Information of ${newPerson.name} has already been removed from the server`, \n                success: false\n            });\n\n            clearNotification();\n        });\n    };\n\n    const handleDelete = id => {\n        const person = persons.find(person => person.id === id);\n\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personsService\n            .remove(id)\n            .then(response => {\n                setPersons(persons.filter(person => person.id !== id));\n                setNotification({\n                    message: `Deleted ${person.name}`, \n                    success: true\n                });\n\n                clearNotification();\n            })\n            .catch(error => {\n                setNotification({\n                    message: `Information of ${person.name} has already been removed from the server`, \n                    success: false\n                });\n\n                clearNotification();\n            });\n        }\n    };\n\n    const handleName = event => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumber = event => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    useEffect(() => {\n        personsService\n        .getAll()\n        .then(response => {\n            setPersons(response);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }, []);\n\n    return (\n        <div>\n            <Notification notification={notification} />\n            <div className=\"container\">\n                <h2>Phonebook</h2>\n                <Filter search={search} handleSearch={handleSearch}  />\n                <h3>Add a new</h3>\n                <PersonForm handleSubmit={handleSubmit} newName={newName} handleName={handleName} newNumber={newNumber} handleNumber={handleNumber} />\n                <h3>Numbers</h3>\n                <Persons persons={persons} search={search} handleDelete={handleDelete} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}